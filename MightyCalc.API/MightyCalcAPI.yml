openapi: 3.0.0
# Added by API Auto Mocking Plugin
#servers:
  #- description: SwaggerHub API Auto Mocking
   # url: https://virtserver.swaggerhub.com/andreyleskov/MightyCalc/1.0.0
info:
  description: |
    This is API iterface for MightyCalc project.  You can find
    out more about the project at
    [github](https://github.com/andreyleskov/MightyCalc).
  version: "1.0.0"
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: andrey.leskov@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: calculate
    description: Do the calculation you prefer
  - name: statistics
    description: MightyCalc usage statistics 
  - name: functions
    description: User-defined functions access
paths:
  /calc:
    post:
      tags:
        - calculate
      summary: Calculate an expression
      operationId: calculate
      responses:
        '400':
          description: Invalid expression provided
        '422':
          description: Expression contains unknown functions 
      requestBody:
        $ref: '#/components/requestBodies/Expression'
  
  /func:
    get:
      tags:
        - functions
      summary: Finds user-defined functions
      description: Search for function names by provided wildcard. Will list top 100 functions
      operationId: findFunctions
      parameters:
        - name: name
          in: query
          description: Function name pattern to seach for 
          required: false
          schema:
            type: string
            
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NamedExpression'
    post: 
      tags: 
        - functions
      operationId: createFunction
      summary: Creates a new user-defined function
      description: Creates a new user-defined function under given name 
      parameters:
        - name: expression
          in: header
          schema:
            $ref: '#/components/schemas/NamedExpression'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid expression provided
        '422':
          description: Expression contains unknown functions 
        '409':
          description: Function with such name already exists
    put:
      tags: 
        - functions
      operationId: replaceFunction
      summary: Replaces a user-defined function
      description: Replaces a new user-defined function under given name 
      parameters:
        - name: expression
          in: header
          schema:
            $ref: '#/components/schemas/NamedExpression'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid expression provided
        '422':
          description: Expression contains unknown functions 
        '409':
          description: Function with such name already exists
    delete:
      tags: 
        - functions
      summary: Removes a user-defined function
      operationId: deleteFunction
      description: Removes a user-defined function with given name 
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid function name provided
        
    
  /stats:
    get:
      tags:
        - statistics
      summary: Get usage statistics
      description: Provides information about function usage frequency
      operationId: usageStats
      parameters:
        - name: from
          in: query
          description: start of the report period
          required: false
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: end of the report period
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name: 
                      type: string 
                    usageCount:
                      type: integer
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expression'
        '400':
          description: Invalid datetime period specified
components:
  schemas:
    Parameter:
      type: object
      required: 
        - name
      properties:
        name:
          type: string
          example: 'a'
        value:
          type: integer
          example: '10'
      example: '{name: a, value: 10}'
    Expression:
      type: object
      required:
        - representation
        - parameters
      properties:
        representation:
          type: string
          example: 'Min(a, b) + 1'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          example: '{{name: a, value: 10}}'
    NamedExpression:
      type: object
      required:
       - name 
       - expression
      properties:
        name: 
          type: string 
        expression:
          $ref: '#/components/schemas/Expression'
  requestBodies:
    Expression:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Expression'
      description: Expression object that needs to be calculated
      required: true