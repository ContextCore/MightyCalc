version: 0.0.{build}
branches:
  only:
  - master
image: Ubuntu
environment:
  # Changes ownership of minikube config dirs to running user
  CHANGE_MINIKUBE_NONE_USER: "true"
  # Set kubeconfig and minikube paths
  KUBECONFIG: "/home/appveyor/.kube/config"
  MINIKUBE_HOME: "/home/appveyor/kubernetes"
  # Disable prompts for CI
  MINIKUBE_WANTUPDATENOTIFICATION: "false"
  MINIKUBE_WANTREPORTERRORPROMPT: "false"
  #APPVEYOR_SSH_BLOCK: true
services:
 - docker
install:
- sh: |
    
    . ./build/git_versioning.sh

    export APP_VERSION=${version}
    export FILE_VERSION=${fileVersion}
    export INFORMATIONAL_VERSION=${informationVersion}

    echo "exported app version is $APP_VERSION"
    echo "exported file version is $FILE_VERSION"
    echo "exported info version is $INFORMATIONAL_VERSION"

    curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.0.0/minikube-linux-amd64
    chmod +x minikube
    sudo mv minikube /usr/local/bin/.

    curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.14.0/bin/linux/amd64/kubectl
    chmod +x kubectl
    sudo mv kubectl /usr/local/bin/.
    sudo -E minikube start --vm-driver=none

- ps: Update-AppveyorBuild -Version "$env:APP_VERSION+$env:APPVEYOR_BUILD_NUMBER"
build_script:
- sh: |
    cd ./src 

    echo changing API yaml definition version to $env:APP_VERSION
    sed -i '' -e 's/\(.*version:.*\)/version: $env:APP_VERSION/g' MightyCalcAPI.yaml

    docker build . --target=build-env -t mightycalc-test:local
    docker build . -t aleskov/mightycalc:latest -t aleskov/mightycalc:$APP_VERSION
    docker save aleskov/mightycalc:latest > mightycalc.tar  
    cd ..
   
    docker build . -f ./build/persistence/persistence.dockerfile -t aleskov/mightycalc-persistence:latest -t aleskov/mightycalc-persistence:$APP_VERSION
    
test_script:
- sh: |
    #set -euo pipefail
    #using docker instead of k8s for simplicity, we don't need any external services
    #curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -

    echo creating environment for tests

    cd ./deploy
    ./create_environment.sh mk

    #run integration tests in created environment
    cd ../test
    ./run_tests.sh

artifacts:
- path: '**\mighty*.tar'
  name: Containers
- path: '**\*logs.zip'
  name: TestLogs
deploy_script:
- sh: | 
    docker login -u $dockerUser -p $dockerPassword
    docker push aleskov/mightycalc-persistence
    docker push aleskov/mightycalc
on_finish:
  - sh: |
      find "$APPVEYOR_BUILD_FOLDER" -type f -name '*.trx' -print0 | xargs -0 -I '{}' curl -F 'file=@{}' "https://ci.appveyor.com/api/testresults/mstest/$APPVEYOR_JOB_ID" 
